#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <fstream>
#include <cstring>
#include <sstream>   
#include <string.h>

using namespace std;

string ** create_array2d(size_t a, size_t b) {
	string ** m = new string *[a];
	m[0] = new string[a * b];
	for (size_t i = 1; i != a; ++i)
		m[i] = m[i - 1] + b;
	return m;
}
void free_array2d(int ** m, size_t a, size_t b) {
	delete[] m[0];
	delete[] m;
}
int count_column(string s)
{
	unsigned short count_column = 0;
	unsigned short i = 0;
	while (s[i] != '\0')
	{
		if (s[i] == ',') count_column++;
		i++;
	}
	return count_column;
}
void array_filling(int count_columnn, int count_line, ifstream& input);
//char ** 
void work_file(string name)
{
	ifstream input;
	input.open("test.txt");
	unsigned short count_line = 0; // kol-vo strok
	int count_columnn = 0;
	if (input.is_open())
	{
		string s;
		getline(input, s);
		count_columnn = count_column(s);
		input.seekg(0, input.beg); // возврат курсора на начало файла
		while (getline(input, s))
		{
			count_line++;
		}
	}
	else
	{
		cout << "file open error";
	}

	input.seekg(0, input.beg);
	array_filling(count_columnn, count_line, input);
	input.close();
}

void array_filling(int count_columnn, int count_line, ifstream& input)
{
	input.seekg(0, input.beg);
	string s;
	string ** m = create_array2d(count_columnn, count_line);
	//for (int i = 0; i != count_columnn; i++)
		for (int j = 0; j != count_line; j++)
		{
			getline(input, s);
			getline(input, s);
			char *cstr = new char[s.length() + 1];
			strcpy(cstr, s.c_str());

			char * slovo = strtok(cstr, " ,.-");
			while (slovo != NULL)                         // пока есть лексемы
			{
				cout << slovo << " ";
				slovo = strtok(NULL, " ,.-");
			}
			delete[] cstr;
		}
}


int main()
{
	/*int ** m = create_array2d(n, colmn);
	int count = 0;
	for (size_t i = 0; i != n; ++i)
	{
		for (size_t j = 0; j != colmn; ++j)
		{
			m[i][j] = count;
			cout << m[i][j];
			count++;
		}
		cout << endl;
	}
	free_array2d(m, n, colmn);*/
	work_file("test.txt");
	system("pause");
	return 0;
}
